# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f7TRVJSyXxA097QU3UAumdALCue1t22F

# Problem Statement

---



---




The objective of this case study is to analyze the relationship between symptoms and diseases in order to accurately diagnose a person's condition. With various symptoms such as headache, joint pain, and cough, it is crucial to determine the underlying disease, as it can range from mild to severe. This study highlights the significance of identifying specific symptoms and their corresponding diseases to improve diagnostic accuracy and facilitate appropriate medical treatment
"""

import numpy as np
import pandas as pd

df=pd.read_csv('/content/dataset.csv')
df

df.isnull().mean()*100

df.isnull().sum()

df_new=df.iloc[:,:7]

df_new

for col in df_new.columns:
  df_new[col].fillna(df[col].mode()[0],inplace=True)

df_new.isnull().sum()

# df_new.duplicated().sum()

# df_new.shape

from sklearn.preprocessing import LabelEncoder
# for col in df_new.columns:

LE=LabelEncoder()

for col in df_new.columns:
  df_new[col]=LE.fit_transform(df_new[col])

df_new

from sklearn.model_selection import train_test_split

x=df_new.drop('Disease',axis=1)
y=df_new['Disease']

x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.80,random_state=42)

x_train

y_train

from sklearn.neighbors import KNeighborsClassifier

KN=KNeighborsClassifier()

KN.fit(x_train,y_train)

acc=KN.score(x_test,y_test)

acc*100

acc=KN.score(x_train,y_train)
acc*100

y_pred=KN.predict(x_test)

from sklearn.metrics import *

accuracy_score(y_test,y_pred)*100

