# -*- coding: utf-8 -*-
"""Hierarchical_customer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bx1i8Vp7TmZdPk52h0oDjRMfRd3INO-Y
"""

from google.colab import files
uploaded=files.upload()

"""##**Importing Libraries**"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""##**Loading the dataset**"""

df=pd.read_csv('Mall_Customers.csv')
df

"""##**EDA**"""

df.info()

df.isnull().sum().sum()

df.duplicated().sum()

"""##**Taking input data**"""

X=df[['Annual Income (k$)','Spending Score (1-100)']].values #Converting to 2D array

"""##**Choosing number of clusters**"""

import scipy.cluster.hierarchy as sch

dendrogram = sch.dendrogram(sch.linkage(X,method='single'))

dendrogram = sch.dendrogram(sch.linkage(X,method='complete'))

dendrogram = sch.dendrogram(sch.linkage(X,method='average'))

dendrogram = sch.dendrogram(sch.linkage(X,method='ward'))

dendrogram = sch.dendrogram(sch.linkage(X, method = 'ward'))
plt.title('Dendrogram')
plt.xlabel('Customers')
plt.ylabel('Euclidean Distances')
plt.axhline(y=394, color='b', linestyle='--')
plt.axhline(y=265, color='b', linestyle='--')
plt.axhline(y=244, color='r', linestyle='--')
plt.axhline(y=115, color='r', linestyle='--')
plt.show() # find largest vertical distance we can make without crossing any other horizontal line

"""##**Training the model**"""

from sklearn.cluster import AgglomerativeClustering

Agg_clu=AgglomerativeClustering(n_clusters=5,metric='euclidean',linkage='ward')
Y=Agg_clu.fit_predict(X)

Y

Output=pd.DataFrame(Y,columns=['Clusterid'])
Output

pd.concat([df,Output],axis=1)

"""##**Vizualization**"""

plt.scatter(X[:, 0], X[:, 1], c= Y, cmap = 'rainbow')

plt.title('Customer Groups')
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')
plt.show()